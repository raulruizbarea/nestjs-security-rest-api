openapi: 3.0.0
paths:
  /api/v1/subjects:
    post:
      operationId: SubjectsController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSubjectDto"
      responses:
        "201":
          description: ""
      tags:
        - Subjects
  /api/v1/health:
    get:
      operationId: HealthController_check
      parameters: []
      responses:
        "200":
          description: The Health Check is successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  info:
                    type: object
                    example:
                      &a1
                      database:
                        &a2
                        status: up
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  error:
                    type: object
                    example: {}
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  details:
                    type: object
                    example: *a1
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
        "503":
          description: The Health Check is not successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  info:
                    type: object
                    example: *a1
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  error:
                    type: object
                    example:
                      redis:
                        &a3
                        status: down
                        message: Could not connect
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
                    nullable: true
                  details:
                    type: object
                    example:
                      database: *a2
                      redis: *a3
                    additionalProperties:
                      type: object
                      properties:
                        status:
                          type: string
                      additionalProperties:
                        type: string
      tags:
        - Health
info:
  title: NestJS Security REST API
  description: Open University of Catalonia
  version: "1.0"
  contact: {}
tags: []
servers:
  - url: http://localhost:3000
    description: null
    variables: null
components:
  securitySchemes:
    bearer:
      scheme: Bearer
      bearerFormat: JWT
      type: http
      name: JWT
      description: Enter JWT token
      in: header
  schemas:
    CreateSubjectDto:
      type: object
      properties:
        academicalYear:
          type: string
        code:
          type: number
        lang:
          type: string
          enum:
            - CAS
            - CAT
            - ANG
        name:
          type: string
        description:
          type: string
      required:
        - academicalYear
        - code
        - lang
        - name
        - description
